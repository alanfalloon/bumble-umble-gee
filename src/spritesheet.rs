#![allow(dead_code)]
// Autogenerated using: cargo run --example make-spritesheet
use macroquad::math::{Rect, XY};

pub struct FrameRect {
    pub pixel_offset: XY<u32>,
    pub xy: Rect,
    pub uv: Rect,
}

pub const SPRITESHEET_PNG_BYTES: &[u8] = include_bytes!("spritesheet.png");

pub const BEE_FLYING_FRAME_SIZE: XY<u32> = XY {
    x: 125u32,
    y: 128u32,
};
pub const BEE_FLYING_FRAME_UV: XY<f32> = XY {
    x: 0.33333334f32,
    y: 1f32,
};
pub const BEE_FLYING_SPRITE_Y_OFFSET: u32 = 0u32;
pub const BEE_FLYING_FRAMES: [FrameRect; 3] = [
    FrameRect {
        pixel_offset: XY { x: 0u32, y: 0u32 },
        xy: Rect {
            x: 0f32,
            y: 0f32,
            w: 125f32,
            h: 128f32,
        },
        uv: Rect {
            x: 0f32,
            y: 0f32,
            w: 0.33333334f32,
            h: 1f32,
        },
    },
    FrameRect {
        pixel_offset: XY { x: 125u32, y: 0u32 },
        xy: Rect {
            x: 125f32,
            y: 0f32,
            w: 125f32,
            h: 128f32,
        },
        uv: Rect {
            x: 0.33333334f32,
            y: 0f32,
            w: 0.33333334f32,
            h: 1f32,
        },
    },
    FrameRect {
        pixel_offset: XY { x: 250u32, y: 0u32 },
        xy: Rect {
            x: 250f32,
            y: 0f32,
            w: 125f32,
            h: 128f32,
        },
        uv: Rect {
            x: 0.6666667f32,
            y: 0f32,
            w: 0.33333334f32,
            h: 1f32,
        },
    },
];
