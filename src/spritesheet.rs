
#![allow(dead_code)]
// Autogenerated using: cargo run --example make-spritesheet
use macroquad::math::{Rect, XY};

pub struct FrameRect {
    pub pixel_offset: XY<u32>,
    pub xy: Rect,
    pub uv: Rect,
}

pub const SPRITESHEET_PNG_BYTES: &[u8] = include_bytes!("spritesheet.png");

pub const BEE_FLYING_FRAME_SIZE: XY<u32> = XY {
    x: 256u32,
    y: 249u32,
};
pub const BEE_FLYING_FRAME_UV: XY<f32> = XY {
    x: 0.25f32,
    y: 0.5f32,
};
pub const BEE_FLYING_SPRITE_Y_OFFSET: u32 = 0u32;
pub const BEE_FLYING_FRAMES: [FrameRect; 4] = [
    FrameRect {
        pixel_offset: XY { x: 0u32, y: 0u32 },
        xy: Rect { x: 0f32, y: 0f32, w: 256f32, h: 249f32 },
        uv: Rect { x: 0f32, y: 0f32, w: 0.25f32, h: 0.5f32 },
    },
    FrameRect {
        pixel_offset: XY { x: 256u32, y: 0u32 },
        xy: Rect { x: 256f32, y: 0f32, w: 256f32, h: 249f32 },
        uv: Rect { x: 0.25f32, y: 0f32, w: 0.25f32, h: 0.5f32 },
    },
    FrameRect {
        pixel_offset: XY { x: 512u32, y: 0u32 },
        xy: Rect { x: 512f32, y: 0f32, w: 256f32, h: 249f32 },
        uv: Rect { x: 0.5f32, y: 0f32, w: 0.25f32, h: 0.5f32 },
    },
    FrameRect {
        pixel_offset: XY { x: 768u32, y: 0u32 },
        xy: Rect { x: 768f32, y: 0f32, w: 256f32, h: 249f32 },
        uv: Rect { x: 0.75f32, y: 0f32, w: 0.25f32, h: 0.5f32 },
    },
];


pub const BEE_WALKING_FRAME_SIZE: XY<u32> = XY {
    x: 256u32,
    y: 249u32,
};
pub const BEE_WALKING_FRAME_UV: XY<f32> = XY {
    x: 0.25f32,
    y: 0.5f32,
};
pub const BEE_WALKING_SPRITE_Y_OFFSET: u32 = 249u32;
pub const BEE_WALKING_FRAMES: [FrameRect; 1] = [
    FrameRect {
        pixel_offset: XY { x: 0u32, y: 249u32 },
        xy: Rect { x: 0f32, y: 249f32, w: 256f32, h: 249f32 },
        uv: Rect { x: 0f32, y: 0.5f32, w: 0.25f32, h: 0.5f32 },
    },
];

